@using Beatrice.Web.Views.Shared.Component
@model Beatrice.Service.Core
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <div>
        @(await Html.RenderComponentAsync<ListDevices>(
            RenderMode.ServerPrerendered, new {  
                Data = "Connected Controller" 
            }
        ))
    </div> 

    <h1 class="display-4">Rainway Application Host</h1>
    @if (Model.Connected)
    {
        <h2 style="color:green">Connected</h2>
        <input type="button" value="Stop Host" onclick="location.href='@Url.Action("Stop")'" />
        <br />
        <span>Peer Id: @Model.Runtime?.PeerId</span>
        <br />
        <span>Connected Peers:</span>

        @if (Model.Runtime != null && Model.Runtime.Peers.Any())
        {
            <ul>
                @foreach (var peer in Model.Runtime.Peers)
                {
                    <li>Peer: @peer.Key @peer.Value.ExternalId</li>
                }
            </ul>
        }
        else
        {
            <span style="color:red">No one connected</span>
        }
    }
    else
    {
        <h2 style="color:red">Disconnected</h2>
        <input type="button" value="Start Host" onclick="location.href='@Url.Action("Start")'" />
    }
    @if (Model.Logger.Any())
    {
        <h3>Logger</h3>
        <ul>
            @foreach (var item in Model.Logger)
            {
                <li>@item</li>
            }
        </ul>
    }
</div>

@*@section scripts{
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
          let devices = await navigator.usb.getDevices();
          devices.forEach(device => {
            // Add |device| to the UI.
            console.log(device)
          });
        });
    </script>
    <script>

         navigator.usb.getDevices()
            .then(devices => {
              console.log("Total devices: " + devices.length);
              devices.forEach(device => {
                console.log("Product name: " + device.productName + ", serial number " + device.serialNumber);
              });
            });

    </script>
}*@
