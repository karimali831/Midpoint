# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
    globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type User @model {
    id: ID! @primaryKey
    fullName: String
    firebaseUid: ID!
    email: String!
    displayName: String!
    rooms: [HostRoom] @hasMany
    chatMessages: [HostRoomChatMessage] @hasMany
    midiMessages: [HostRoomMidiMessage] @hasMany
}

type HostRoomMidiMessage @model {
    id: ID! @primaryKey
    data: String!
    room: HostRoom @belongsTo
}

type HostRoom @model {
    id: ID! @primaryKey
    name: String!
    desc: String
    imageUri: String
    lastMessageId: ID
    lastMessageDate: String
    createdUserId: ID! @index(name: "byUser")

    user: User @belongsTo
    roomUsers: [HostRoomUser] @hasMany
    midiMessages: [HostRoomMidiMessage] @hasMany
    chatMessages: [HostRoomChatMessage] @hasMany
}

type HostRoomUser @model {
    id: ID! @primaryKey
    userId: ID! @index(name: "byUser")
    hostRoomId: ID! @index(name: "byHostRoom")
    lastSeen: String
    archived: Boolean!
    pinned: Boolean!

    user: User @hasOne
    room: HostRoom @belongsTo
    chatMessages: [HostRoomChatMessage] @hasMany
    midiMessages: [HostRoomMidiMessage] @hasMany
}

type HostRoomChatMessage @model {
    id: ID! @primaryKey
    userId: ID! @index(name: "byUser")
    roomId: ID! @index(name: "byHostRoom")
    message: String!
    read: Boolean!

    user: User @belongsTo
    room: HostRoom @belongsTo
}

type Subscription {
    onMidiMessage(roomId: ID!, data: String!): HostRoomMidiMessage
        @aws_subscribe(mutations: ["updateHostRoomMidiMessage"])
}
